# SPDX-FileCopyrightText: Copyright (c) 2023 - 2024 NVIDIA CORPORATION & AFFILIATES.
# SPDX-FileCopyrightText: All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_target_: src.models.baselines.cnn.corrdiff_unet.CorrDiffEventLitModule
compile: false
num_samples: 1 # for inference, aka ensemble size

net:
  _target_: physicsnemo.models.diffusion.unet.UNet
#  name: regression # Name of the preconditioner
#  hr_mean_conditioning: False # High-res mean (regression's output) as additional condition
  ##### standard model configs #####
  img_channels: 4
  N_grid_channels: 4 # 4# output channels for depth
  embedding_type: "zero"
  checkpoint_level: 0
  use_fp16: false
  img_in_channels:  7
  img_out_channels: 1  # for depth
  img_resolution: [256, 352]
#  model_type: "SongUNet" # match carla_linear dataset // songuet[256, 344]; songunePosEmb(defualt): [256. 352]
#  gridtype: "linear"

optimizer:
  _target_: torch.optim.Adam
  _partial_: true
  lr: 0.0002
  betas: [0.9,0.999]
  eps: 1e-8

criterion:
  _target_: src.utils.corrdiff_utils.loss.RegressionLoss

allow_resize: true  # if true, resizes data to multiples of 16 to be compatible with UNet


  # TODO: DID NOT IMPLEMENT lr_decay or lr_rampup