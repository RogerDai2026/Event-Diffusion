_target_: src.models.baselines.cnn.cnn_module.CNNLitModule

# additional params
net:
  _target_: src.models.baselines.cnn.songunet.EventDepthUNet
  in_channels: ${data.data_config.num_input_chs}
  out_channels: 1
  config:
    model_channels: 128
    channel_mult: [1, 2, 2, 2]
    emb_mult: 4
    num_blocks: 2
    attn_resolutions: []

optimizer:
  _target_: torch.optim.Adam
  _partial_: true
  lr: 2e-4
  weight_decay: 0.0
  betas: [0.9, 0.999]
  eps: 1e-8

criterion:
  _target_: torch.nn.MSELoss
  reduction: mean

compile: false
allow_resize: true  # if true, resizes data to multiples of 16 to be compatible with UNet

# Training parameters
learning_rate: 1e-4
weight_decay: 1e-5
batch_size: 24  # Match the data module batch size
num_workers: 24  # Match the data module num_workers


## Data module configuration
#data:
#  _target_: src.data.event_datamodule.EventDataModule
#  batch_size: 24
#  num_workers: 24
#  pin_memory: true
#  seed: 42
#  data_config:
#    base_dir: /scratch/shared/data/event3d/
#    encoding_mode: carla_linear
#    num_input_chs: 3
#    train:
#      name: carla
#      disp_name: carla_train
#      dir: /scratch/shared/data/event3d/carla/
#      filenames: ./data_split/carla_linear/carla_train.txt
#      resize_to_hw: [256, 344]
#    val:
#      name: carla
#      disp_name: carla_val
#      dir: /scratch/shared/data/event3d/carla/
#      filenames: ./data_split/carla_linear/carla_val_single.txt
#      resize_to_hw: [256, 344]
#    io_args:
#      read_event_via: default
#      allow_resize: true  # Add this parameter
#  augmentation_args:
#    lr_flip_p: 0.5
#  depth_transform_args:
#    type: reversible_normalization
#    clip: true
#    norm_min: -1.0
#    norm_max: 1.0
#    min_max_quantile: 0.02
#    max_depth: 250.0

# Metrics
metrics:
  - "MAE"
  - "RMSE"
  - "SSIM" 